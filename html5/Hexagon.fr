
package spellbook.Hexagon where

type Width = Long
type Index = Long

ifmod2 :: (Index -> Width -> Index) -> Long -> Index -> Width -> Index
ifmod2 f reminder idx width =
  if idx `mod` 2 == reminder then
    idx
  else
    f idx width

leftUp, up, rightUp, rightDown, down, leftDown :: Index -> Width -> Index
leftUp    = (pred .) . (ifmod2 up   0)
up        = (-)
rightUp   = (succ .) . (ifmod2 up   0)
rightDown = (succ .) . (ifmod2 down 1)
down      = (+)
leftDown  = (pred .) . (ifmod2 down 1)

nearby_ :: Index -> Width -> [Index]
nearby_ idx width =
  map (\f -> f idx width) [leftUp, up, rightUp, rightDown, down, leftDown]

nearby idx = arrayFromList . (nearby_ idx)
